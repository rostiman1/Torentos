@inject IProductService ProductService
@if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
else
{
   <ul class="list-unstyled">
    @foreach (var product in ProductService.Products)
    {
        <li class="media my-3">
            <span>
                  <div>@if(product.Type == "images/VideoGame.png")
                {
                   <div>Games</div>
                }
                @if(product.Type == "images/Movie.png")
                {
                   <div>Movies</div>
                }
                @if(product.Type == "images/Music.png")
                {
                   <div>Music</div>
                }
            </div>
                <img class="media-img" src="@product.Type" width="50" height="50"/></span>
            <span class="media-image-wrapper mr-2">
                <a href="/product/@product.Id">
                    <img class="media-img" src="@product.Image" width="300" height="200" alt="@product.Title"/>
                    </a>
            </span>
            <div class="media-body">
                <a href="/product/@product.Id">
                <h4 class="mb-0">@product.Title</h4>    
                </a>
                <p>@product.Description</p>
                <h5 class="price">
                   $@product.Price 
                </h5>
            </div>
            <br>
        </li>
    }
</ul>
}


@code {

    protected override async void OnInitialized()
    {
        await ProductService.GetProducts();
    }
    
}
